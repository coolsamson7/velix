// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by velix registry builder
// ignore_for_file: unnecessary_import, unused_local_variable

import 'package:velix/velix.dart';
import 'main.dart' show Money;
import 'package:velix/reflectable/reflectable.dart' show Dataclass, Attribute;

void registerTypes() {
  type<Money>(
    location: 'asset:velix/example/main.dart:5:1',
    params: [
      param<String>('currency', isNamed: true, isRequired: true), 
      param<int>('value', isNamed: true, isRequired: true)
    ],
    constructor: ({String currency = '', int value = 0}) => Money(currency: currency, value: value),
    fromMapConstructor: (Map<String,dynamic> args) => Money(currency: args['currency'] as String? ?? '', value: args['value'] as int? ?? 0),
    fromArrayConstructor: (List<dynamic> args) => Money(currency: args[0] as String? ?? '', value: args[1] as int? ?? 0),
    fields: [
      field<Money,String>('currency',
        type: StringType().maxLength(7),
        getter: (obj) => obj.currency,
      ), 
      field<Money,int>('value',
        type: IntType().greaterThan(0),
        getter: (obj) => obj.value,
      )
    ],
  );

  TypeDescriptor.verify();
}
